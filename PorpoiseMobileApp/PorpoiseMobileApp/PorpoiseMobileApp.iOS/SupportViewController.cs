// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using MessageUI;
using MvvmCross.Platform;
using PorpoiseMobileApp.ViewModels;
using UIKit;

namespace PorpoiseMobileApp.iOS
{
	public partial class SupportViewController : MvvmViewController<SupportViewModel>
	{


		public SupportViewController(IntPtr handle) : base(handle)
		{

		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			((PorpoiseButton)ContactSupportButton).Inverse = true;
			((PorpoiseButton)ContactSupportButton).Bordered(1f, PorpoiseColors.Turquoise.CGColor);
			MFMailComposeViewController mailController;
			//lblHaveQuestions.TextColor = PorpoiseColors.DarkGrey;
			//lblSendUsAnEmail.TextColor = PorpoiseColors.DarkGrey;


			ContactSupportButton.TouchUpInside += (s, e) =>
			{
				if (MFMailComposeViewController.CanSendMail)
				{
					mailController = new MFMailComposeViewController();
					mailController.SetToRecipients(new string[] { ViewModel.SupportEmailAddress });
					mailController.SetSubject(Resource.SupportEmailSubject);
					mailController.SetMessageBody(Resource.SupportEmailBody, false);
					if (mailController.NavigationBar != null)
					{
						mailController.NavigationBar.TintColor = UIColor.White;
					}
					mailController.Finished += (object sender, MFComposeResultEventArgs args) =>
					{

						args.Controller.DismissViewController(true, () =>
						{
							switch (args.Result)
							{
								case MFMailComposeResult.Sent:
									this.Alert(Resource.SupportEmailSentTitle, Resource.SupportEmailSentMessage, null, null);
									break;
								case MFMailComposeResult.Failed:
									this.Alert(Resource.Error, Resource.SupportEmailError, null, null);
									break;
							}

						});
					};

					this.PresentViewController(mailController, true, null);
				}
				else {
					this.Alert(Resources.MailNotOnTitle, Resources.MailNotOnError, null, null);
				}
			};
		}
	}
}
