// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using CoreGraphics;
using Foundation;
using PorpoiseMobileApp.Client;
using PorpoiseMobileApp.ViewModels;
using UIKit;

namespace PorpoiseMobileApp.iOS
{
	public partial class AccountSettingsViewController : MvvmViewController<AccountSettingsViewModel>
	{
		public AccountSettingsViewController(IntPtr handle) : base(handle)
		{
		}

		void NavigationBarSetUp()
		{
			if (this.NavigationController != null)
			{
				//TODO: figure out how to make the status bar opaque.


				this.NavigationController.NavigationBar.BarStyle = UIBarStyle.BlackOpaque;
				this.NavigationController.NavigationBar.SetBackgroundImage(new UIImage(), UIBarMetrics.Default);
				this.NavigationController.NavigationBar.ShadowImage = new UIImage();
				this.NavigationController.NavigationBar.BackgroundColor = PorpoiseColors.Turquoise;
			}



			NavigationController.NavigationBar.Translucent = false;
			float imageSize = 20f;

			float gap = 5f;

			float borderSize = 0f;

			float textHeight = 1f;

			float buttonWidth = 60;

			float buttonHeight = borderSize * 2 + gap * 3 + imageSize + textHeight;

			float imageOrigin = borderSize + gap;

			float textTop = imageOrigin + imageSize + gap;

			float textBottom = borderSize + gap;

			float imageBottom = textBottom + textHeight + gap;

			UIButton rigthButton = UIButton.FromType(UIButtonType.Custom);

			rigthButton.Center = this.View.Center;

			//Image

			UIImage logout = Services.PorpoiseImage.getFromURL("https://s3.amazonaws.com/porpoise-cdn/mobile-assets/logout%402x.png");

			rigthButton.Frame = new CGRect(0, 15, buttonWidth, buttonHeight + 10);

			rigthButton.SetImage(logout, UIControlState.Normal);

			rigthButton.ImageEdgeInsets = new UIEdgeInsets(0, 15, 0, 10);

			rigthButton.ContentEdgeInsets = new UIEdgeInsets(0, 0, 15, 0);

			rigthButton.SetTitle(Resource.Logout, UIControlState.Normal);

            rigthButton.ContentMode = UIViewContentMode.Center;

			rigthButton.TitleEdgeInsets = new UIEdgeInsets(textTop, -logout.Size.Width, textBottom, 0.0f);

			rigthButton.TitleLabel.Font = UIFont.FromName("Ubuntu-Light", 15f);

			rigthButton.TouchUpInside += delegate
			{
				var user = NSUserDefaults.StandardUserDefaults;

				user.SetBool(true, "logged");

				ViewModel.Logout();

			};

			NavigationItem.RightBarButtonItem = new UIBarButtonItem(rigthButton);


			//NavigationItem.RightBarButtonItem.Title = Resource.Logout;

			//NavigationItem.RightBarButtonItem.Image = new UIImage("logout.png");

			UIImage post = new UIImage("logo.png");


			UIButton leftButton = UIButton.FromType(UIButtonType.Custom);

			leftButton.UserInteractionEnabled = false;

			leftButton.Bounds = new CGRect(0, 0, post.Size.Width, post.Size.Height);

			//leftButton.Frame = new CGRect(0, 0, 30, 30);

			leftButton.SetImage(post, UIControlState.Normal);

			leftButton.SetImage(post, UIControlState.Disabled);

			NavigationItem.LeftBarButtonItem = new UIBarButtonItem(leftButton);

			UILabel label = new UILabel();

			NavigationItem.LeftBarButtonItem.CustomView.Subviews.Append(label);


			NavigationItem.Title = "Porpoise";

		}

		public override async void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

			Client.IPorpoiseWebApiClient client = new Client.PorpoiseWebApiClient();
			var result = await client.GetEmployee();

			if (result != null && result.Successful)
			{
				Debug.WriteLine("RESULT IS NOT NULL");
			}
			else
			{

				var user = NSUserDefaults.StandardUserDefaults;
				Debug.WriteLine("Employee is  null");
				user.SetBool(false, "logged");
				AccountInfo.Token = null;

				await Task.Delay(1000);

				ViewModel.Logout();


			}

		}

		public async override void ViewDidLoad()
		{
			base.ViewDidLoad();
			this.View.BackgroundColor = PorpoiseColors.Turquoise;
			if (AccountInfo.UserId == null || AccountInfo.UserId.Value == null || AccountInfo.UserId.Value.ToString() == null || AccountInfo.UserId.Value.ToString().Equals(""))
			{

				IPorpoiseWebApiClient client = new PorpoiseWebApiClient();
				var employee = await client.GetEmployee();
				AccountInfo.UserId = employee.UserId;

				var user = NSUserDefaults.StandardUserDefaults;

				NSString password = new NSString("password");

				AccountInfo.Password = user.StringForKey("password");




			}
			this.NavigationBarSetUp();
			this.styleComponents();

			var url = new NSUrl(ViewModel.SettingsUrl);
			var request = new NSUrlRequest(url);
			AccountSettingsWebView.BackgroundColor = PorpoiseColors.Turquoise;
			AccountSettingsWebView.LoadRequest(request);

		}

		private void styleComponents()
		{

			foreach (NSLayoutConstraint consraint in AccountSettingsWebView.Constraints)
			{


				if(consraint.Description.Contains("width")){

					consraint.Constant = this.View.Bounds.Width;

				}


			}
		}
	}
}
